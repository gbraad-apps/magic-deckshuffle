{"version":3,"sources":["index.js"],"names":["cards","to","i","x","y","scale","rot","delay","from","trans","r","s","concat","Deck","_useState","useState","Set","gone","_slicedToArray","_useSprings","useSprings","length","_objectSpread","_useSprings2","props","set","bind","useGesture","_ref","index","args","down","xDelta","delta","xDir","distance","direction","velocity","dir","add","isGone","has","window","innerWidth","undefined","config","friction","tension","size","setTimeout","clear","map","_ref2","React","createElement","animated","div","key","style","transform","interpolate","Object","assign","backgroundImage","render","document","getElementById"],"mappings":"uJAMMA,SAAQ,CACZ,uDACA,uDACA,uDACA,uDACA,uDACA,uDACA,yDAGIC,EAAK,SAACC,GAAC,MAAM,CAAEC,EAAG,EAAGC,GAAQ,EAALF,EAAQG,MAAO,EAAGC,IAAK,EAAGC,MAAW,IAAJL,IACzDM,EAAO,SAACN,GAAC,MAAM,CAAEC,EAAG,EAAGG,IAAK,EAAGD,MAAO,IAAKD,GAAI,MAC/CK,EAAQ,SAACC,EAAGC,GAAC,iBAAAC,OAAgBF,EAAI,GAAE,iBAAAE,OAAgBF,EAAC,eAAAE,OAAcD,EAAC,MAEzE,SAASE,IAAO,IAAAC,EACCC,mBAAS,kBAAM,IAAIC,MAA3BC,EAAiCC,YAAAJ,EAAA,GAA7B,GAAAK,EACUC,YAAWpB,EAAMqB,OAAQ,SAACnB,GAAC,OAAAoB,YAAA,GAAWrB,EAAGC,GAAE,CAAEM,KAAMA,EAAKN,OAAMqB,EAAAL,YAAAC,EAAA,GAA5EK,EAAKD,EAAA,GAAEE,EAAGF,EAAA,GAEXG,EAAOC,YAAW,SAAAC,GAAqF,IAA3EC,EAA2EX,YAAAU,EAAlFE,KAAI,GAAQ,GAAGC,EAAIH,EAAJG,KAAcC,EAAVd,YAAAU,EAAEK,MAAK,GAAS,GAAyBC,GAAdN,EAARO,SAAQjB,YAAAU,EAAEQ,UAAS,GAAO,IAAGC,EAAQT,EAARS,SAEtFC,EAAMJ,EAAO,GAAK,EAAI,GACvBH,GAFWM,EAAW,IAELpB,EAAKsB,IAAIV,GAC/BJ,EAAI,SAACvB,GACH,GAAI2B,IAAU3B,EAAd,CACA,IAAMsC,EAASvB,EAAKwB,IAAIZ,GAIxB,MAAO,CAAE1B,EAHCqC,GAAU,IAAME,OAAOC,YAAcL,EAAMP,EAAOC,EAAS,EAGzD1B,IAFA0B,EAAS,KAAOQ,EAAe,GAANF,EAAWD,EAAW,GAE1ChC,MADH0B,EAAO,IAAM,IACHxB,WAAOqC,EAAWC,OAAQ,CAAEC,SAAU,GAAIC,QAAShB,EAAO,IAAMS,EAAS,IAAM,SAEpGT,GAAQd,EAAK+B,OAAShD,EAAMqB,QAAQ4B,WAAW,kBAAMhC,EAAKiC,SAAWzB,EAAI,SAACvB,GAAC,OAAKD,EAAGC,MAAK,OAG/F,OAAOsB,EAAM2B,IAAI,SAAAC,EAAuBlD,GAAC,IAArBC,EAACiD,EAADjD,EAAGC,EAACgD,EAADhD,EAAGE,EAAG8C,EAAH9C,IAAKD,EAAK+C,EAAL/C,MAAK,OAClCgD,IAAAC,cAACC,IAASC,IAAG,CAACC,IAAKvD,EAAGwD,MAAO,CAAEC,UAAWC,YAAY,CAACzD,EAAGC,GAAI,SAACD,EAAGC,GAAC,qBAAAQ,OAAoBT,EAAC,OAAAS,OAAMR,EAAC,aAC7FiD,IAAAC,cAACC,IAASC,IAAGK,OAAAC,OAAA,GAAKpC,EAAKxB,GAAE,CAAEwD,MAAO,CAAEC,UAAWC,YAAY,CAACtD,EAAKD,GAAQI,GAAQsD,gBAAe,OAAAnD,OAASZ,EAAME,GAAE,YAKvH8D,iBAAOX,IAAAC,cAACzC,EAAI,MAAKoD,SAASC,eAAe","file":"static/js/main.8a2dcd1f.chunk.js","sourcesContent":["import { render } from 'react-dom'\nimport React, { useState } from 'react'\nimport { useSprings, animated, interpolate } from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport './styles.css'\n\nconst cards = [\n  'https://media.wizards.com/2019/eld/en_M2Ztp4qnSK.png',\n  'https://media.wizards.com/2019/eld/en_d5yPScT1Mm.png',\n  'https://media.wizards.com/2019/eld/en_sdpNmkspqN.png',\n  'https://media.wizards.com/2019/eld/en_Xbklmo60Cb.png',\n  'https://media.wizards.com/2019/eld/en_bMNI9QNLAV.png',\n  'https://media.wizards.com/2019/eld/en_rbvLMCAiZE.png',\n  'https://media.wizards.com/2019/eld/en_PbWFx0Qu0n.png'\n]\n\nconst to = (i) => ({ x: 0, y: i * -4, scale: 1, rot: 0, delay: i * 100 })\nconst from = (i) => ({ x: 0, rot: 0, scale: 1.5, y: -1000 })\nconst trans = (r, s) => `rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`\n\nfunction Deck() {\n  const [gone] = useState(() => new Set())\n  const [props, set] = useSprings(cards.length, (i) => ({ ...to(i), from: from(i) }))\n  \n  const bind = useGesture(({ args: [index], down, delta: [xDelta], distance, direction: [xDir], velocity }) => {\n    const trigger = velocity > 0.2\n    const dir = xDir < 0 ? -1 : 1\n    if (!down && trigger) gone.add(index)\n    set((i) => {\n      if (index !== i) return\n      const isGone = gone.has(index)\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0\n      const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0)\n      const scale = down ? 1.6 : 1.5\n      return { x, rot, scale, delay: undefined, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } }\n    })\n    if (!down && gone.size === cards.length) setTimeout(() => gone.clear() || set((i) => to(i)), 600)\n  })\n  \n  return props.map(({ x, y, rot, scale }, i) => (\n    <animated.div key={i} style={{ transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`) }}>\n      <animated.div {...bind(i)} style={{ transform: interpolate([rot, scale], trans), backgroundImage: `url(${cards[i]})` }} />\n    </animated.div>\n  ))\n}\n\nrender(<Deck />, document.getElementById('root'))\n"],"sourceRoot":""}